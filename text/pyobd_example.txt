In its present state, pyobd2 is largely a library for further development.
There are two command-line programs of interest:

readiness.py -- queries a vehicle for its emissions inspection readiness;
    Checking for readiness requires that the vehicle's engine be running.
    Then run this script to see which internal monitors are ready for testing.

record-all.py -- runs through all of the regression tests and records the
    communication sessions, packaging them up into "recorded-data.zip".
    To assist in the debugging and development of pyobd2, run this script
    and please send the resulting .zip file.

The above two programs are reasonably useful sample code for using the
pyobd2 library.  The general outline of usage is:

    import obd
    import obd.message.OBDRequest

    # Find the scan tools attached to the computer and pick one
    interfaces = obd.interface.enumerate()
    interface = interfaces[0]

    # Open the connection with the vehicle
    interface.open()
    interface.set_protocol(None)
    interface.connect_to_vehicle()

    # Communicate with the vehicle
    request = obd.message.OBDRequest(sid=0x01, pid=0x00)
    responses = interface.send_request(request)

    # Close the connection
    interface.disconnect_from_vehicle()
    interface.close()
